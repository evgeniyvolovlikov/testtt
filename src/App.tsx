import React, { useState } from 'react';
import { DashboardSidebar } from './components/dashboard/DashboardSidebar';
import { DashboardOverview } from './components/dashboard/DashboardOverview';
import { TaskList } from './components/dashboard/TaskList';
import { AddTaskDialog } from './components/dashboard/AddTaskDialog';
import { Task, TaskStatus } from './types/task';
import { Toaster } from './components/ui/sonner';
import { toast } from 'sonner@2.0.3';

// Mock data –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const initialTasks: Task[] = [
  {
    id: '1',
    title: '–ó–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É',
    description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç –¥–ª—è —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞',
    category: 'work',
    priority: 'high',
    status: 'in-progress',
    dueDate: new Date().toISOString().split('T')[0],
    createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: '2',
    title: '–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã',
    description: '–ú–æ–ª–æ–∫–æ, —Ö–ª–µ–±, —è–π—Ü–∞, –æ–≤–æ—â–∏',
    category: 'shopping',
    priority: 'medium',
    status: 'todo',
    dueDate: new Date().toISOString().split('T')[0],
    createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: '3',
    title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≤ –∑–∞–ª–µ',
    description: '–°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ + –∫–∞—Ä–¥–∏–æ',
    category: 'health',
    priority: 'medium',
    status: 'completed',
    dueDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
    createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    completedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: '4',
    title: '–°–æ–∑–≤–æ–Ω —Å –∫–æ–º–∞–Ω–¥–æ–π',
    description: '–û–±—Å—É–¥–∏—Ç—å –ø–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Å–ø—Ä–∏–Ω—Ç',
    category: 'work',
    priority: 'high',
    status: 'todo',
    dueDate: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
    createdAt: new Date().toISOString(),
  },
  {
    id: '5',
    title: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É',
    description: '–î–æ—á–∏—Ç–∞—Ç—å "–ê—Ç–æ–º–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏"',
    category: 'personal',
    priority: 'low',
    status: 'in-progress',
    createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
  },
];

export default function App() {
  const [activeView, setActiveView] = useState('overview');
  const [tasks, setTasks] = useState<Task[]>(initialTasks);

  const handleAddTask = (taskData: Omit<Task, 'id' | 'createdAt'>) => {
    const newTask: Task = {
      ...taskData,
      id: Date.now().toString(),
      createdAt: new Date().toISOString(),
    };

    setTasks((prev) => [newTask, ...prev]);
    toast.success('–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
  };

  const handleUpdateStatus = (id: string, status: TaskStatus) => {
    setTasks((prev) =>
      prev.map((task) =>
        task.id === id
          ? {
              ...task,
              status,
              completedAt: status === 'completed' ? new Date().toISOString() : undefined,
            }
          : task
      )
    );
    
    const statusLabels = {
      todo: '–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é',
      'in-progress': '–í –ø—Ä–æ—Ü–µ—Å—Å–µ',
      completed: '–ó–∞–≤–µ—Ä—à–µ–Ω–∞',
    };
    
    toast.success(`–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "${statusLabels[status]}"`);
  };

  const handleDeleteTask = (id: string) => {
    setTasks((prev) => prev.filter((task) => task.id !== id));
    toast.success('–ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞');
  };

  const renderContent = () => {
    switch (activeView) {
      case 'overview':
        return <DashboardOverview tasks={tasks} />;
      case 'tasks':
        return (
          <TaskList
            tasks={tasks}
            onUpdateStatus={handleUpdateStatus}
            onDelete={handleDeleteTask}
          />
        );
      case 'today':
        const todayTasks = tasks.filter((task) => {
          if (!task.dueDate) return false;
          return new Date(task.dueDate).toDateString() === new Date().toDateString();
        });
        return (
          <div className="space-y-6">
            <div>
              <h2 className="text-3xl text-white mb-2">–ó–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</h2>
              <p className="text-slate-400">
                {todayTasks.length} {todayTasks.length === 1 ? '–∑–∞–¥–∞—á–∞' : '–∑–∞–¥–∞—á'} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ
              </p>
            </div>
            <TaskList
              tasks={todayTasks}
              onUpdateStatus={handleUpdateStatus}
              onDelete={handleDeleteTask}
            />
          </div>
        );
      case 'calendar':
      case 'stats':
      case 'settings':
        return (
          <div className="flex items-center justify-center h-96">
            <div className="text-center">
              <div className="text-6xl mb-4">üöß</div>
              <h3 className="text-2xl text-white mb-2">–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h3>
              <p className="text-slate-400">–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω</p>
            </div>
          </div>
        );
      default:
        return <DashboardOverview tasks={tasks} />;
    }
  };

  return (
    <div className="min-h-screen bg-slate-950 flex">
      <DashboardSidebar activeView={activeView} onViewChange={setActiveView} />
      
      <main className="flex-1 overflow-auto">
        <div className="sticky top-0 z-10 bg-slate-950/80 backdrop-blur-lg border-b border-slate-800">
          <div className="container mx-auto px-8 py-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-2xl text-white mb-1">
                  {activeView === 'overview' && '–û–±–∑–æ—Ä'}
                  {activeView === 'tasks' && '–í—Å–µ –∑–∞–¥–∞—á–∏'}
                  {activeView === 'today' && '–°–µ–≥–æ–¥–Ω—è'}
                  {activeView === 'calendar' && '–ö–∞–ª–µ–Ω–¥–∞—Ä—å'}
                  {activeView === 'stats' && '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'}
                  {activeView === 'settings' && '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'}
                </h1>
                <p className="text-sm text-slate-400">
                  {new Date().toLocaleDateString('ru-RU', {
                    weekday: 'long',
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                  })}
                </p>
              </div>
              <AddTaskDialog onAddTask={handleAddTask} />
            </div>
          </div>
        </div>

        <div className="container mx-auto px-8 py-8">{renderContent()}</div>
      </main>

      <Toaster position="bottom-right" />
    </div>
  );
}
